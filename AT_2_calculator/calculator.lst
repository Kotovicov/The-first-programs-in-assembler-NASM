     1                                  ; calculator + - / *
     2                                  extern printf
     3                                  section .data
     4 00000000 3C00000000000000        	number1		dq 60
     5 00000008 1E00000000000000        	number2		dq 30
     6                                  	;neg_num 	dq -12
     7 00000010 546865206E756D6265-     	fmt			db "The numbers are %ld and %ld",10,0
     7 00000019 72732061726520256C-
     7 00000022 6420616E6420256C64-
     7 0000002B 0A00               
     8 0000002D 257320256C640A00        	fmtint		db "%s %ld",10,0
     9 00000035 73756D203D00            	sumi	db	"sum =",0
    10 0000003B 646966666572656E63-     	difi	db	"difference =",0
    10 00000044 65203D00           
    11 00000048 70726F64756374203D-     	multi	db	"product =",0
    11 00000051 00                 
    12 00000052 696E74656765722071-     	divi	db	"integer quotient =",0
    12 0000005B 756F7469656E74203D-
    12 00000064 00                 
    13                                  
    14                                  section .bss
    15 00000000 ????????????????        	resulti resq 1
    16 00000008 ????????????????        	modulo	resq 1
    17                                  
    18                                  section	.text
    19                                  	global main 
    20                                  main:
    21 00000000 55                      	push	rbp
    22 00000001 4889E5                  	mov		rbp,rsp	
    23                                  ; output numbers
    24 00000004 48BF-                   	mov rdi, fmt 
    24 00000006 [1000000000000000] 
    25 0000000E 488B3425[00000000]      	mov rsi, [number1]
    26 00000016 488B1425[08000000]      	mov rdx, [number2]
    27 0000001E B800000000              	mov rax, 0
    28 00000023 E8(00000000)            	call printf
    29                                  ; summa
    30 00000028 488B0425[00000000]      	mov rax, [number1]
    31 00000030 48030425[08000000]      	add rax, [number2]	; Сложение number2 с rax.
    32 00000038 48890425[00000000]      	mov [resulti], rax	; Перемещение суммы в переменную result.
    33                                  	; displaying the result
    34 00000040 48BF-                   		mov rdi, fmtint
    34 00000042 [2D00000000000000] 
    35 0000004A 48BE-                   		mov rsi, sumi
    35 0000004C [3500000000000000] 
    36 00000054 488B1425[00000000]      		mov rdx, [resulti]
    37 0000005C B800000000              		mov rax, 0
    38 00000061 E8(00000000)            		call printf
    39                                  
    40                                  ; Вычитание-----------------------------------------------------------
    41 00000066 488B0425[00000000]      	mov rax, [number1]
    42 0000006E 482B0425[08000000]      	sub rax, [number2]	; Вычитание number2 из rax.
    43 00000076 48890425[00000000]      	mov [resulti], rax	
    44                                  	; displaying the result	
    45 0000007E 48BF-                   		mov rdi, fmtint
    45 00000080 [2D00000000000000] 
    46 00000088 48BE-                   		mov rsi, difi
    46 0000008A [3B00000000000000] 
    47 00000092 488B1425[00000000]      		mov rdx, [resulti]
    48 0000009A B800000000              		mov rax, 0
    49 0000009F E8(00000000)            		call printf
    50                                  
    51                                  ; Умножение----------------------------------------------------------
    52 000000A4 488B0425[00000000]      	mov rax, [number1]
    53 000000AC 48F72C25[08000000]      	imul qword [number2]	; Умножение rax на number2.
    54 000000B4 48890425[00000000]      	mov	[resulti], rax		
    55                                  	; вывод результата
    56 000000BC 48BF-                   		mov rdi, fmtint
    56 000000BE [2D00000000000000] 
    57 000000C6 48BE-                   		mov rsi, multi
    57 000000C8 [4800000000000000] 
    58 000000D0 488B1425[00000000]      		mov rdx, [resulti]
    59 000000D8 B800000000              		mov rax, 0
    60 000000DD E8(00000000)            		call printf
    61                                  
    62                                  ; Деление------------------------------------------------------------
    63 000000E2 488B0425[00000000]      		mov rax, [number1]
    64 000000EA BA00000000              		mov rdx, 0	; В rdx должен быть 0 перед idiv.
    65 000000EF 48F73C25[08000000]      		idiv qword [number2]; Деление rax на number2, остаток в rdx.
    66 000000F7 48890425[00000000]      		mov [resulti], rax
    67 000000FF 48891425[08000000]      		mov [modulo], rdx	; Запись содержимого rdx в modulo.
    68                                  
    69                                  ; Вывод результата.
    70 00000107 48BF-                   		mov rdi, fmtint
    70 00000109 [2D00000000000000] 
    71 00000111 48BE-                   		mov rsi, divi
    71 00000113 [5200000000000000] 
    72 0000011B 488B1425[00000000]      		mov rdx, [resulti]
    73 00000123 B800000000              		mov rax, 0
    74 00000128 E8(00000000)            		call printf
    75                                  ;		mov rdi, fmtint
    76                                  ;		mov rsi, remi
    77                                  ;		mov rdx, [modulo]
    78                                  ;		mov rax, 0
    79                                  ;		call printf
    80 0000012D 4889EC                  mov rsp,rbp
    81 00000130 5D                      pop rbp
    82 00000131 C3                      ret
